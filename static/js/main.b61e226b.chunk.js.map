{"version":3,"sources":["components/Feedback/FeedbackOptions.js","data/constants.js","components/Section.js","components/Feedback/Notification.js","components/Feedback/Stat.js","App.jsx","index.js"],"names":["FeedbackBtn","feedback","onLeaveFeedback","type","data-feedback","onClick","FeedbackOptions","options","map","option","feedbackOptions","Section","title","children","Notification","Stat","good","neutral","bad","total","positiveFeedback","className","Feedback","useState","setGoodFeedback","setNeutralFeedback","setBadFeedback","countTotalFeedback","target","dataset","state","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAGMA,EAAc,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC/B,OACE,wBAAQC,KAAK,SAASC,gBAAeH,EAAUI,QAASH,EAAxD,SACGD,KAcQK,EATS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASL,EAAsB,EAAtBA,gBAClC,OAAOK,EAAQC,KAAI,SAACC,GAAD,OAAW,cAAC,EAAD,CAAaR,SAAUQ,EAAQP,gBAAiBA,QCZnEQ,EAAkB,CAAC,OAAQ,UAAW,OCSpCC,EATE,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCEQC,G,MAHM,kBACrB,mMCiBeC,EAlBF,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,iBACxC,OACE,mCACGD,EACE,qBAAIE,UAAU,YAAd,UACC,uCAAUL,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,2CAAcC,EAAd,UAED,cAAC,EAAD,OCPM,SAASE,IAAa,IAAD,EACDC,mBAAU,GADT,mBAC1BP,EAD0B,KACpBQ,EADoB,OAEID,mBAAU,GAFd,mBAE3BN,EAF2B,KAElBQ,EAFkB,OAGJF,mBAAU,GAHN,mBAG3BL,EAH2B,KAGtBQ,EAHsB,KA4B9BC,EAAqB,WACzB,OAAOX,EAAOC,EAAUC,GAQxB,OACE,gCACE,cAAC,EAAD,CAASN,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBL,QAASG,EAAiBR,gBAlC3B,SAAC,GAMrB,OANkC,EAAZ0B,OACMC,QAApB5B,UAMN,IAAK,OACHuB,GAAgB,SAAAM,GAAK,OAAIA,EAAQ,KAC/B,MACJ,IAAK,UACHL,GAAmB,SAAAK,GAAK,OAAIA,EAAQ,KAClC,MACJ,IAAK,MACHJ,GAAe,SAAAI,GAAK,OAAIA,EAAQ,KAC9B,MACJ,QACI,aAoBJ,cAAC,EAAD,CAASlB,MAAM,aAAf,SACE,cAAC,EAAD,CACEI,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOQ,IACPP,iBAlB8B,WAEtC,IAAMD,EAAQQ,IACd,OAAOI,KAAKC,MAAY,IAALhB,EAAWG,GAeJc,U,MCjD5BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b61e226b.chunk.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types'\n\nconst FeedbackBtn = ({ feedback, onLeaveFeedback }) => {\n  return(\n    <button type='button' data-feedback={feedback} onClick={onLeaveFeedback}>\n      {feedback}\n    </button>\n  )\n}\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map((option)=> <FeedbackBtn feedback={option} onLeaveFeedback={onLeaveFeedback} />)\n}\n\nFeedbackOptions.propTypes = {\n  options: propTypes.arrayOf(propTypes.string),\n  onLeaveFeedback: propTypes.func.isRequired,\n}\n\nexport default FeedbackOptions;\n","export const feedbackOptions = ['good', 'neutral', 'bad']"," const Section = ({title, children}) => {\n  return(\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  )\n}\n\nexport default Section","import React from 'react';\nimport styles from './Notification.module.css';\n\nconst Notification = () =>\n<p>Оставьте отзыв, будьте любезны</p> \n\nexport default Notification;\n","import React from 'react';\nimport Notification  from './Notification'\n\nconst Stat = ({good, neutral, bad, total, positiveFeedback}) => {\n  return (\n    <>\n      {total ? \n        (<ul className=\"Statistic\">\n          <li>Good {good}</li>  \n          <li>Neutral {neutral}</li>  \n          <li>Bad {bad}</li>  \n          <li>Total {total}</li>  \n          <li>Positive {positiveFeedback}%</li>  \n        </ul>)\n       : <Notification/> \n      }   \n    </>\n  )\n}\n;\n\nexport default Stat;","import { useState } from 'react'; \nimport FeedbackOptions from './components/Feedback/FeedbackOptions';\nimport {feedbackOptions} from './data/constants';\nimport Section from './components/Section';\nimport Stat from './components/Feedback/Stat';\n\n\nexport default function Feedback () {\n   const [good, setGoodFeedback ]= useState (0);\n  const [neutral, setNeutralFeedback] = useState (0);\n  const [bad, setBadFeedback] = useState (0);\n\n\nconst  handleFeedback = ({target}) => {\n    const { feedback } = target.dataset\n\n  //   const qwe = (feedback) => {\n  //  const [state, setState] = useState() =>{}\n\n    switch (feedback) {\n      case 'good':\n        setGoodFeedback(state => state + 1);\n          break;\n      case 'neutral':\n        setNeutralFeedback(state => state + 1);\n          break;\n      case 'bad':\n        setBadFeedback(state => state + 1);\n          break;\n      default:\n          return;\n  }\n\n}\n\nconst countTotalFeedback = () => {    \n  return good + neutral + bad;\n} \nconst countPositiveFeedbackPercentage = () => {\n\n  const total = countTotalFeedback();\n  return Math.round((good*100 / total));\n};\n\n  return (\n    <div>\n      <Section title='Please leave feedback'>\n        <FeedbackOptions options={feedbackOptions} onLeaveFeedback={handleFeedback}/>\n      </Section>\n\n      <Section title='Statistics'>\n        <Stat\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positiveFeedback={countPositiveFeedbackPercentage()}\n          \n        />\n      </Section>\n      \n    </div>\n  )\n}  \n  // state = {\n  //   good : 0,\n  //   neutral : 0,\n  //   bad : 0\n  // }\n\n\n  // handleFeedback = ({target}) => {\n  //   const { feedback } = target.dataset\n  //   this.setState((prevState) => ({ [feedback]: prevState[feedback] +1 }))\n  // }\n\n//   countTotalFeedback = () => {    \n//     const { good, neutral, bad } = this.state;\n//     return good + neutral + bad;\n//   } \n//   countPositiveFeedbackPercentage = () => {\n//     const { good } = this.state;\n//     const total = this.countTotalFeedback();\n//     return Math.round((good*100 / total));\n//   };\n    \n\n//   render() {\n//     const { good, neutral, bad } = this.state;\n//     const total = this.countTotalFeedback();\n//     const positiveFeedback = this.countPositiveFeedbackPercentage();\n    \n//   }  \n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}