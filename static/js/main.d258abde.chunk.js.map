{"version":3,"sources":["components/Feedback/FeedbackOptions.js","data/constants.js","components/Section.js","components/Feedback/Notification.js","components/Feedback/Stat.js","App.jsx","index.js"],"names":["FeedbackBtn","feedback","onLeaveFeedback","type","data-feedback","onClick","FeedbackOptions","options","map","option","feedbackOptions","Section","title","children","Notification","Stat","good","neutral","bad","total","positiveFeedback","className","App","state","handleFeedback","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAGMA,EAAc,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC/B,OACE,wBAAQC,KAAK,SAASC,gBAAeH,EAAUI,QAASH,EAAxD,SACGD,KAcQK,EATS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASL,EAAsB,EAAtBA,gBAClC,OAAOK,EAAQC,KAAI,SAACC,GAAD,OAAW,cAAC,EAAD,CAAaR,SAAUQ,EAAQP,gBAAiBA,QCZnEQ,EAAkB,CAAC,OAAQ,UAAW,OCSpCC,EATE,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCEQC,G,MAHM,kBACrB,mMCiBeC,EAlBF,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,iBACxC,OACE,mCACGD,EACE,qBAAIE,UAAU,YAAd,UACC,uCAAUL,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,2CAAcC,EAAd,UAED,cAAC,EAAD,OCTYE,E,4MACnBC,MAAQ,CACNP,KAAO,EACPC,QAAU,EACVC,IAAM,G,EAIRM,eAAiB,YAAe,IACtBvB,EADqB,EAAZwB,OACWC,QAApBzB,SACR,EAAK0B,UAAS,SAACC,GAAD,sBAAmB3B,EAAW2B,EAAU3B,GAAW,O,EAGnE4B,mBAAqB,WAAO,IAAD,EACM,EAAKN,MACpC,OAFyB,EACjBP,KADiB,EACXC,QADW,EACFC,K,EAGzBY,gCAAkC,WAAO,IAC/Bd,EAAS,EAAKO,MAAdP,KACFG,EAAQ,EAAKU,qBACnB,OAAOE,KAAKC,MAAY,IAALhB,EAAWG,I,uDAItB,IAAD,EACwBc,KAAKV,MAA5BP,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQc,KAAKJ,qBACbT,EAAmBa,KAAKH,kCAC9B,OACE,gCACE,cAAC,EAAD,CAASlB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBL,QAASG,EAAiBR,gBAAiB+B,KAAKT,mBAGnE,cAAC,EAAD,CAASZ,MAAM,aAAf,SACE,cAAC,EAAD,CACEI,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,iBAAkBA,a,GAxCGc,IAAMC,W,MCEvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d258abde.chunk.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types'\n\nconst FeedbackBtn = ({ feedback, onLeaveFeedback }) => {\n  return(\n    <button type='button' data-feedback={feedback} onClick={onLeaveFeedback}>\n      {feedback}\n    </button>\n  )\n}\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map((option)=> <FeedbackBtn feedback={option} onLeaveFeedback={onLeaveFeedback} />)\n}\n\nFeedbackOptions.propTypes = {\n  options: propTypes.arrayOf(propTypes.string),\n  onLeaveFeedback: propTypes.func.isRequired,\n}\n\nexport default FeedbackOptions;\n","export const feedbackOptions = ['good', 'neutral', 'bad']"," const Section = ({title, children}) => {\n  return(\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  )\n}\n\nexport default Section","import React from 'react';\nimport styles from './Notification.module.css';\n\nconst Notification = () =>\n<p>Оставьте отзыв, будьте любезны</p> \n\nexport default Notification;\n","import React from 'react';\nimport Notification  from './Notification'\n\nconst Stat = ({good, neutral, bad, total, positiveFeedback}) => {\n  return (\n    <>\n      {total ? \n        (<ul className=\"Statistic\">\n          <li>Good {good}</li>  \n          <li>Neutral {neutral}</li>  \n          <li>Bad {bad}</li>  \n          <li>Total {total}</li>  \n          <li>Positive {positiveFeedback}%</li>  \n        </ul>)\n       : <Notification/> \n      }   \n    </>\n  )\n}\n;\n\nexport default Stat;","import React from 'react'; \nimport FeedbackOptions from './components/Feedback/FeedbackOptions';\nimport {feedbackOptions} from './data/constants';\nimport Section from './components/Section';\nimport Stat from './components/Feedback/Stat';\nexport default class App extends React.Component {\n  state = {\n    good : 0,\n    neutral : 0,\n    bad : 0\n  }\n\n\n  handleFeedback = ({target}) => {\n    const { feedback } = target.dataset\n    this.setState((prevState) => ({ [feedback]: prevState[feedback] +1 }))\n  }\n\n  countTotalFeedback = () => {    \n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  } \n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return Math.round((good*100 / total));\n  };\n  \n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positiveFeedback = this.countPositiveFeedbackPercentage();\n    return (\n      <div>\n        <Section title='Please leave feedback'>\n          <FeedbackOptions options={feedbackOptions} onLeaveFeedback={this.handleFeedback}/>\n        </Section>\n\n        <Section title='Statistics'>\n          <Stat\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positiveFeedback={positiveFeedback}\n            \n          />\n        </Section>\n        \n      </div>\n    )\n  }  \n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}